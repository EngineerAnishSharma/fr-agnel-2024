generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id         String       @id @default(cuid())
  name       String
  userId     String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  billboard  BillBoard[]  @relation("StoretoBillboards")
  categories Categories[] @relation("StoretoCategories")
  colors     Colors[]     @relation("StoretoColors")
  order      Order[]      @relation("StoreToOrder")
  Products   Products[]   @relation("StoretoProducts")
  weight     Weight[]     @relation("StoretoSizes")
}

model BillBoard {
  id        String   @id @default(cuid())
  label     String
  ImageUrl  String
  StoreId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  store     Store    @relation("StoretoBillboards", fields: [StoreId], references: [id])
}

model Categories {
  id        String     @id @default(cuid())
  StoreId   String
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  store     Store      @relation("StoretoCategories", fields: [StoreId], references: [id])
  Products  Products[] @relation("ProducttoCategory")
}

model Weight {
  id        String     @id @default(cuid())
  StoreId   String
  name      String
  value     BigInt
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Products  Products[] @relation("ProducttoWeight")
  store     Store      @relation("StoretoSizes", fields: [StoreId], references: [id])
}

model Colors {
  id        String     @id @default(cuid())
  StoreId   String
  name      String
  value     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  store     Store      @relation("StoretoColors", fields: [StoreId], references: [id])
  Products  Products[] @relation("ProducttoColor")
}

model Products {
  id           String      @id @default(cuid())
  StoreId      String
  CategoriesId String
  sizesId      String
  colorId      String
  name         String
  price        Decimal
  Featured     Boolean     @default(false)
  Archived     Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  expiryDate   Int         @default(6)
  quantity     Int         @default(1)
  popularity   Boolean     @default(false)
  profitMargin Int         @default(10)
  Image        Image[]     @relation("ProducttoImage")
  orderItem    OrderItem[] @relation("ProducttoOrderitem")
  categories   Categories  @relation("ProducttoCategory", fields: [CategoriesId], references: [id])
  store        Store       @relation("StoretoProducts", fields: [StoreId], references: [id])
  color        Colors      @relation("ProducttoColor", fields: [colorId], references: [id])
  weight       Weight      @relation("ProducttoWeight", fields: [sizesId], references: [id])
  Sales        Sales[]
}

model Image {
  id        String   @id @default(cuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Products @relation("ProducttoImage", fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id         String      @id @default(cuid())
  StoreId    String
  name       String      @default("Lorem ipsum")
  Email      String      @default("loremipsum@random.com")
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  store      Store       @relation("StoreToOrder", fields: [StoreId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  order     Order    @relation(fields: [orderId], references: [id])
  product   Products @relation("ProducttoOrderitem", fields: [productId], references: [id])
}

model Sales {
  id          String   @id
  productId   String
  productname String
  createdAt   DateTime @default(now())
  storeId     String?  @default("clsu746eh0000vtp4k0p9r7bw")
  updatedAt   DateTime
  price       Decimal
  Products    Products @relation(fields: [productId], references: [id])
}
